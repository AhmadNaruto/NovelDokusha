<?xml version="1.0" encoding="utf-8"?>
<manifest
	xmlns:android="http://schemas.android.com/apk/res/android"
	xmlns:tools="http://schemas.android.com/tools"
	>

	<uses-permission android:name="android.permission.INTERNET" />
	<uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
	<uses-permission android:name="android.permission.POST_NOTIFICATIONS" />
	<uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
	<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
	<uses-permission android:name="android.permission.FOREGROUND_SERVICE" />


	<application
		android:name=".App"
		android:allowBackup="true"
		android:icon="@mipmap/ic_logo"
		android:label="@string/app_name"
		android:roundIcon="@mipmap/ic_logo_round"
		android:supportsRtl="true"
		android:theme="@style/AppTheme.Light"
		android:usesCleartextTraffic="true"
		>
		<activity
			android:name=".ui.screens.main.MainActivity"
			android:exported="true"
			android:theme="@style/AppTheme.Launcher"
			>
			<intent-filter>
				<action android:name="android.intent.action.MAIN" />
				<category android:name="android.intent.category.LAUNCHER" />
			</intent-filter>
		</activity>
		<activity android:name=".ui.screens.sourceCatalog.SourceCatalogActivity" />
		<activity android:name=".ui.screens.chaptersList.ChaptersActivity" />
		<activity android:name=".ui.screens.reader.ReaderActivity" />
		<activity android:name=".ui.screens.databaseSearch.DatabaseSearchActivity" />
		<activity android:name=".ui.screens.databaseBookInfo.DatabaseBookInfoActivity" />
		<activity android:name=".ui.screens.globalSourceSearch.GlobalSourceSearchActivity" />
		<activity android:name=".ui.screens.webView.WebViewActivity" />

		<service
			android:name=".services.BackupDataService"
			android:exported="false"
			/>
		<service
			android:name=".services.RestoreDataService"
			android:exported="false"
			/>
		<service
			android:name=".services.libraryUpdate.LibraryUpdateService"
			android:exported="false"
			/>
		<service
			android:name=".services.EpubImportService"
			android:exported="false"
			/>
		<service
			android:name=".services.narratorMediaControls.NarratorMediaControlsService"
			android:exported="false"
			android:foregroundServiceType="mediaPlayback"
			>
			<intent-filter>
				<action android:name="android.intent.action.MEDIA_BUTTON" />
			</intent-filter>
		</service>

		<receiver
			android:name="androidx.media.session.MediaButtonReceiver"
			android:exported="true"
			>
			<intent-filter>
				<action android:name="android.intent.action.MEDIA_BUTTON" />
			</intent-filter>
		</receiver>

		<provider
			android:name="androidx.startup.InitializationProvider"
			android:authorities="${applicationId}.androidx-startup"
			android:exported="false"
			tools:node="merge"
			>
			<!-- Remove and manually initialize with Configuration.Provider
				 so we can inject a custom worker factory.
			-->
			<meta-data
				android:name="androidx.work.WorkManagerInitializer"
				android:value="androidx.startup"
				tools:node="remove"
				/>
		</provider>

	</application>

</manifest>